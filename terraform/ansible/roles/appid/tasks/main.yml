---
- name: get IAM token
  uri:
    url: "https://iam.cloud.ibm.com/identity/token"
    method: POST
    body_format: form-urlencoded
    body: "grant_type=urn:ibm:params:oauth:grant-type:apikey&apikey={{ ibmcloud_api_key }}"
  register: iam_token

- name: update redirect_uris
  uri:
    url: "{{ appid_mgmt_url }}/config/redirect_uris"
    method: PUT
    headers:
      Authorization: "Bearer {{ iam_token.json|json_query('access_token') }}"
      accept: "application/json"
    body_format: json
    return_content: yes
    status_code: [200, 204]
    body: '{"redirectUris": ["https://{{ cluster_hostname }}/login/oidc"]}'

- name: upload kubeflow logo
  shell: |
    curl -X 'POST' \
    '{{ appid_mgmt_url }}/config/ui/media?mediaType=logo' \
    -H 'accept: application/json' \
    -H 'Authorization: Bearer {{ iam_token.json|json_query('access_token') }}' \
    -H 'Content-Type: multipart/form-data' \
    -F 'file=@{{ lookup('env', 'HOME') }}/bin/kubeflow-logo.png;type=image/png'

- name: create appid config
  shell: |
    KUBECONFIG={{ kube_config }} {{ lookup('env', 'HOME') }}/bin/kubectl delete secret oidc-authservice-client -n istio-system || true
    KUBECONFIG={{ kube_config }} {{ lookup('env', 'HOME') }}/bin/kubectl create secret generic \
      oidc-authservice-client -n istio-system \
      --from-literal="CLIENT_ID={{ appid_clientId }}" \
      --from-literal="CLIENT_SECRET={{ appid_secret }}"
    KUBECONFIG={{ kube_config }} {{ lookup('env', 'HOME') }}/bin/kubectl get configmap \
      oidc-authservice-parameters -n istio-system -o json | {{ lookup('env', 'HOME') }}/bin/jq \
      '.data.OIDC_AUTH_URL=""|.data.OIDC_PROVIDER="{{ appid_oauthServerUrl }}"|.data.REDIRECT_URL="https://{{ cluster_hostname }}/login/oidc"|.data.SKIP_AUTH_URI=""' | \
      KUBECONFIG={{ kube_config }} {{ lookup('env', 'HOME') }}/bin/kubectl apply -f -

- name: restart oauth-service
  shell: |
    KUBECONFIG={{ kube_config }} {{ lookup('env', 'HOME') }}/bin/kubectl rollout restart sts authservice -n istio-system
